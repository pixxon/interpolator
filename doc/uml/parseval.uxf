<?xml version="1.0" encoding="UTF-8"?><diagram program="umlet" version="11.3">
  <zoom_level>10</zoom_level>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>60</x>
      <y>80</y>
      <w>280</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>SymbolException
--
- _what: QString
--
&lt;&lt;constructor&gt;&gt;
+ SymbolException(what: QString)
+ raise(): void
+ what(): char*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>440</x>
      <y>80</y>
      <w>280</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>LexicalException
--
- _what: QString
--
&lt;&lt;constructor&gt;&gt;
+ SymbolException(what: QString)
+ raise(): void
+ what(): char*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>760</x>
      <y>70</y>
      <w>280</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>ParserException
--
- _what: QString
--
&lt;&lt;constructor&gt;&gt;
+ SymbolException(what: QString)
+ raise(): void
+ what(): char*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>0</x>
      <y>220</y>
      <w>410</w>
      <h>340</h>
    </coordinates>
    <panel_attributes>SymbolInfo
--
- _name: QString
- _rgx: QRegExp
- _argc: Arity
- _asso: Associativity
- _prec: int
- _func: BinaryFunction
--
&lt;&lt;constructor&gt;&gt;
+ SymbolInfo()
&lt;&lt;constructor&gt;&gt;
+ SymbolInfo(name: QString, rgx: QRegExp,
             arity: Arity, asso: Associativity,
             prec: int, func: BinaryFunction)
+ getName(): QString
+ getRegex(): QRegExp
+ getArity(): Arity
+ getAssociativity(): Associativity
+ getPrecedence(): int
+ getFunction(): BinaryFunction
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>30</x>
      <y>570</y>
      <w>460</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>SymbolTable
--
- _table: QVector&lt;SymbolInfo&gt;
_- _instance_
--
&lt;&lt;constructor&gt;&gt;
- SymbolTable()
_+ getInstance(): SymbolTable*_
+ insertSymbol(name: QString, rgx: QRegExp,
               arity: Arity, asso: Associativity,
               prec: int, func: BinaryFunction): void
+ removeSymbol(name: QString): void
+ operator[](name: QString): SymbolInfo
+ begin(): const_iterator
+ end(): const_iterator
{innerclass
const_iterator
innerclass}
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>450</x>
      <y>220</y>
      <w>260</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>Token
--
- _type: QString
- _value: QString
--
&lt;&lt;constructor&gt;&gt;
+ Token(type, value: QString)
+ getType(): QString
+ getValue(): QString</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>430</x>
      <y>370</y>
      <w>290</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>Tokenizer
--
- _current: Token
- _input: QString
- _table: SymbolTable*
--
&lt;&lt;constructor&gt;&gt;
+ Tokenizer(): void
+ setInput(input: QString): void
+ peek(): Token
+ next(): void
+ hasNext(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>740</x>
      <y>200</y>
      <w>350</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>Node
--
- _left: Node*
- _right: Node*
- _token: Token
--
&lt;&lt;constructor&gt;&gt;
+ Node(left, right: Node*, token: Token)
+ getLeft(): Node*
+ getRight(): Node*
+ getToken(): Token
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>770</x>
      <y>390</y>
      <w>290</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>Parser
--
- _tokenizer: Tokenizer
- _table: SymbolTable*
--
&lt;&lt;constructor&gt;&gt;
+ Parser()
+ getTree(): Node*
+ setInput(input: QString): void
- parser(minPrec: int): Node*
- parserPrimary(): Node*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>540</x>
      <y>590</y>
      <w>420</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>Evaluator
--
- _parser: Parser
- _table: SymbolTable*
- _root: Node*
- _cache: QMap&lt;double, QMap&lt;double, double&gt; &gt;
--
&lt;&lt;constructor&gt;&gt;
+ Evaluator()
+ setExpression(input: QString): void
+ calculate(x, y: double): double
+ toString(): QString
- calculateAt(node: Node*, x, y: double): double</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
